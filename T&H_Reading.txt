#include <BLEDevice.h>
#include <BLEUtils.h>
#include <BLEServer.h>
#include "DHT.h"

#define SERVICE_UUID        "00000002-0000-0000-FDFD-FDFDFDFDFDFD"
#define TEMPERATURE_UUID    "2A6E"
#define HUMIDITY_UUID       "2A6F"

#define DHTPIN 4          // Pin where the DHT11 is connected
#define DHTTYPE DHT11     // DHT11 sensor type

BLEServer *pServer;
BLEService *pService;
BLECharacteristic *pTempCharacteristic;
BLECharacteristic *pHumCharacteristic;

DHT dht(DHTPIN, DHTTYPE);

void setup() {
  Serial.begin(115200);

  // Initialize the DHT sensor
  dht.begin();

  // Initialize BLE
  BLEDevice::init("ESP32_BLE_Temperature_Humidity");
  pServer = BLEDevice::createServer();
  
  pService = pServer->createService(SERVICE_UUID);

  pTempCharacteristic = pService->createCharacteristic(
                          TEMPERATURE_UUID,
                          BLECharacteristic::PROPERTY_READ | 
                          BLECharacteristic::PROPERTY_NOTIFY
                        );

  pHumCharacteristic = pService->createCharacteristic(
                          HUMIDITY_UUID,
                          BLECharacteristic::PROPERTY_READ | 
                          BLECharacteristic::PROPERTY_NOTIFY
                        );

  pService->start();

  BLEAdvertising *pAdvertising = pServer->getAdvertising();
  pAdvertising->addServiceUUID(SERVICE_UUID);
  pAdvertising->setScanResponse(false);
  pAdvertising->setMinPreferred(0x06);
  pAdvertising->setMinPreferred(0x12);
  pAdvertising->start();

  Serial.println("BLE service started. Waiting for a client connection...");
}

void loop() {
  delay(2000);

  // Read temperature and humidity from DHT11 sensor
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  // Check if any reads failed and exit early (to try again)
  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  pTempCharacteristic->setValue(temperature);
  pHumCharacteristic->setValue(humidity);

  pTempCharacteristic->notify();
  pHumCharacteristic->notify();

  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.print(" Â°C | Humidity: ");
  Serial.print(humidity);
  Serial.println(" %");
}
